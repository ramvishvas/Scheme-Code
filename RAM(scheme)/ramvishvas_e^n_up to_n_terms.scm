(define (expn x n)
          (cond ((= 0 n) "meaning less")
                ((= 1 n) 1)
                (else (+ (/ (pwrfn x (- n 1)) (factn (- n 1))) (expn x (- n 1))))))
(define (pwrfn x n)
          (cond ((and (= 0 x) (= 0 n)) "meaning less")
                ((and (= 0 x) (not (= 0 n))) 0)
                ((= 0 n) 1)
                (else (* x (pwrfn x (- n 1))))))
(define (factn n)
          (cond ((or (= 0 n) (= 1 n)) 1)
                (else (* n (factn (- n 1))))))
