(define (setA-B a b)
          (cond ((null? a) '( ))
                ((null? b) a)
                ((= 1 (srch (car a) b)) (setA-B (cdr a) b))
                (else (cons (car a) (setA-B (cdr a) b)))))
(define (srch k list1) 
	  (cond ((null? list1) 0)
	        ((= k (car list1)) 1)
	        (else (srch k (cdr list1)))))
