(define (make-bst val ls rs) (list val ls rs))
(define (get-bst-val bst) (car bst))
(define (get-bst-ls bst) (cadr bst))
(define (get-bst-rs bst) (caddr bst))
(define (insert x bst)
  (cond ((null? bst) (make-bst x '() '()))
        ((= x (get-bst-val bst)) bst)
        ((< x (get-bst-val bst))
         (make-bst (get-bst-val bst)
                   (insert x (get-bst-ls bst))
                   (get-bst-rs bst)))
       ((> x (get-bst-val bst))
        (make-bst (get-bst-val bst)
                  (get-bst-ls bst)
                  (insert x (get-bst-rs bst)))))) 
