(define (make-bst val ls rs) (list val ls rs))
(define (get-bst-val bst) (car bst))
(define (get-bst-ls bst) (cadr bst))
(define (get-bst-rs bst) (caddr bst))
(define (no-of-leaves-bst bst)
  (cond ((null? bst) 0)
        ((leaf? bst) 1)
	(else (+ (no-of-leaves-bst (get-bst-ls bst))
		 (no-of-leaves-bst (get-bst-rs bst))))))
(define (leaf? bst)
   (cond ((and (null? (get-bst-ls bst)) (null? (get-bst-rs bst))) #t)
         (else #f)))
